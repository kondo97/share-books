
いいね機能、フォロー機能（クライアントサイドジョインで実装）
--- 1度サブコレクションでIDを取得し、そのIDの情報をもとに参照元のデータ（記事）を取得する。
--- サブコレクションを取得する際に、limitクエリを活用して、一度に取得する数を制限する。
--- 一覧を表示するときには、ページングで実装する。 


自信がないところ
・コレクションbookは、コレクションpostsのサブコレクションで良いのか。
・コレクションfollo,followerは、コレクションusersのサブコレクションで良いのか。
・コレクションfollow,followerは、一つのコレクションを経由したほうが良いかも。
・プロフィールは、ドキュメントusersIDのデータとして格納した方が良い？


# ユーザー情報（コレクション）
users:
  documentID: userID 
  # name: String プロフィールで良い？
  
  # 投稿記事（サブコレクション）
  posts:
    documentID: auto
    title: String
    description: String
    category: String
    cratedAt: Date
    likeCount: number # 投稿にいいねしたユーザーの数

    # 記事に含まれる本（サブコレクションのサブコレクション）
    books: 
      documentID: auto
      title: String
      author: String
      description: String
      AmazonURL: String
    
    # 投稿にいいねしたユーザー（サブコレクションのサブコレクション）
    likedUsers:
      documentID: string  # いいねをつけたユーザーのID

    # 記事へのコメント（サブコレクションのサブコレクション）
    comment:
      documentID: auto
      commentUser: String #コメントしたユーザーのID
      contents: String
      createdAt: Date

  
  # プロフィール（サブコレクション）
  profile:
    documentID: auto
    name: String
    iconURL: String
    introduction: String
    TwitterURL: String

  # ユーザーがいいねした記事（サブコレクション）
  likedPosts:
    documentID: String # 自分がいいねをつけた投稿のID

  
  # フォロー（サブコレクション）
  follow:
    documentID: String  # フォローしたユーザーのID

  # フォロワー（サブコレクション）
  follower:
    documentID: String  # フォローされたユーザーのID
  
    


    
  


      


