rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    //リクエストしているユーザーが認証済かどうかを確認。ログインユーザーかを判定。
    function isAuthenticated() {
      return request.auth != null;
    }

    //userIDがrequest.auth.uid、つまり認証ユーザーのuidと一致するかを判別する。
    function isUserAuthenticated(userID) {
      return request.auth.uid == isAuthenticated() && userID;
    }

    // request.resource.dataを返す
    function incomingData() {
      return request.resource.data;
    }
    
    //ユーザーコレクション
    match /users/{userID} {
      allow read: if true
      allow create, update: if isUserAuthenticated(userID)
      
      // ユーザーIDを問わない postsコレクション
      match /{path=**}/posts/{postsID} {
        allow read: if true 
        allow create, update, delete: if isAuthenticated()
          && incomingData() is number
        // 記事の中の本
        match /books/{booksID} {
          allow read: if true
        }
        //記事にいいねしたユーザー
        match /likedUsers/{likedUsersID} {
          allow read: if true 
          allow create, update, delete: if isAuthenticated(likedUsersID)
        }
        //記事へのコメント
        match /comments/{commentsID} {
          allow read: if true
          allow create, update, delete: if isAuthenticated(commentsID)
            && (incomingData().commentUser is string && rincomingData().commentUser.size() <= 50))
            && (incomingData().description is string && incomingData().description.size() <= 140))
            && incomingData().createdAt == request.time
        }
      }
      
      // 投稿記事 postsコレクション
      match /posts/{postsID} {
        allow create, update: if isUserAuthenticated(userID)
          && (incomingData().title is string && rincomingData().title.size() <= 20))
          && (incomingData().description is string && incomingData().description.size() <= 140))
          && incomingData().category is string
          && incomingData().createdAt == request.time
        //記事の中の本
        match /books/{booksID} {
          allow create, update: if isUserAuthenticated(userID)
            && (incomingData().title is string && rincomingData().title.size() <= 20))
            && (incomingData().author is string && rincomingData().title.size() <= 20))
            && (incomingData().description is string && incomingData().description.size() <= 140))
            && incomingData().AmzonURL is string
        }  
      }
    }
  }
}




